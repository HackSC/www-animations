import React, { useState, useRef, useEffect, useCallback } from 'react';
import { useSpring, animated, interpolate } from 'react-spring';
import { useDrag } from 'react-use-gesture';
import styled from 'styled-components';
import { ChromePicker } from 'react-color';
import { useSpring as useSpring$1 } from 'react-spring/three';

function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }

  strings.raw = raw;
  return strings;
}

function _templateObject4() {
  var data = _taggedTemplateLiteralLoose(["\n  display: flex;\n  font-family: sans-serif;\n  white-space: nowrap;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  justify-content: flex-end;\n  ", "\n  ", "\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteralLoose(["\n  display: flex;\n  ", "\n  justify-content: flex-end;\n  padding: 0 8px;\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteralLoose(["\n  display: flex;\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n  width: 56px;\n  user-select: none;\n  ", "\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteralLoose(["\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 8px 0;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}
var Row =
/*#__PURE__*/
styled.div(
/*#__PURE__*/
_templateObject());
var Label =
/*#__PURE__*/
styled.label(
/*#__PURE__*/
_templateObject2(), function (props) {
  return props.flexLabel === true ? 'flex: 1;' : '';
});
var Content =
/*#__PURE__*/
styled.div(
/*#__PURE__*/
_templateObject3(), function (props) {
  return props.flexLabel !== true ? 'flex: 1;' : '';
});
var Value =
/*#__PURE__*/
styled.div(
/*#__PURE__*/
_templateObject4(), function (props) {
  return props.stack ? 'flex: 1;' : '';
}, function (props) {
  return props.stack ? '' : 'width: 42px;';
});
function BaseControl(_ref) {
  var htmlFor = _ref.htmlFor,
      label = _ref.label,
      flexLabel = _ref.flexLabel,
      value = _ref.value,
      stack = _ref.stack,
      children = _ref.children;

  if (stack) {
    return React.createElement("div", null, React.createElement(Row, null, React.createElement(Label, {
      flexLabel: flexLabel
    }, label), React.createElement(Value, {
      stack: true,
      flexLabel: flexLabel
    }, value)), children);
  }

  return React.createElement(Row, null, React.createElement(Label, {
    flexLabel: flexLabel,
    htmlFor: htmlFor
  }, label), React.createElement(Content, {
    flexLabel: flexLabel
  }, children), typeof value !== 'undefined' && React.createElement(Value, null, value));
}

function _templateObject2$1() {
  var data = _taggedTemplateLiteralLoose(["\n  opacity: 0;\n  margin-right: -15px;\n  & + ", ":after {\n    position: absolute;\n    content: '';\n    display: inline-block;\n    height: 4px;\n    width: 8px;\n    border-left: 2px solid;\n    border-bottom: 2px solid;\n    left: 3px;\n    top: 4px;\n    opacity: 0;\n    transform: translate(0px, 2px) rotate(-45deg);\n    transition: ease-in-out 125ms;\n    transition-property: opacity, transform;\n  }\n  &:checked + ", ":after {\n    opacity: 1;\n    transform: translate(0px, 0px) rotate(-45deg);\n  }\n  &:checked + ", " {\n    background: rgba(0, 0, 0, 0.045);\n    border-color: rgba(0, 0, 0, 0.085);\n  }\n"]);

  _templateObject2$1 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$1() {
  var data = _taggedTemplateLiteralLoose(["\n  height: 16px;\n  width: 16px;\n  border: 2px solid rgba(0, 0, 0, 0.065);\n  border-radius: 4px;\n  position: relative;\n  margin-top: -1px;\n  transition: ease-in-out 125ms;\n  transition-property: background-color, border-color;\n"]);

  _templateObject$1 = function _templateObject() {
    return data;
  };

  return data;
}
var FakeCheckbox =
/*#__PURE__*/
styled.label(
/*#__PURE__*/
_templateObject$1());
var Checkbox =
/*#__PURE__*/
styled.input(
/*#__PURE__*/
_templateObject2$1(), FakeCheckbox, FakeCheckbox, FakeCheckbox);
function BooleanControl(_ref) {
  var control = _ref.control,
      value = _ref.value;
  var htmlFor = "Control" + control.id.current;
  return React.createElement(BaseControl, {
    flexLabel: true,
    label: control.name,
    htmlFor: htmlFor
  }, React.createElement(Checkbox, {
    id: htmlFor,
    type: "checkbox",
    checked: value,
    onChange: function onChange(e) {
      return control.set(e.currentTarget.checked);
    }
  }), React.createElement(FakeCheckbox, {
    htmlFor: htmlFor
  }));
}

function _templateObject$2() {
  var data = _taggedTemplateLiteralLoose(["\n  display: block;\n\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n\n  display: block;\n  position: relative;\n\n  width: 100%;\n  height: 32px;\n\n  color: #000;\n\n  border: 0;\n  background-color: rgba(0, 0, 0, 0.045);\n  border-radius: 4px;\n  padding: 0 4px;\n"]);

  _templateObject$2 = function _templateObject() {
    return data;
  };

  return data;
}
var Button =
/*#__PURE__*/
styled.button(
/*#__PURE__*/
_templateObject$2());
function ButtonControl(_ref) {
  var control = _ref.control;
  return React.createElement("div", {
    style: {
      paddingTop: 8,
      paddingBottom: 8
    }
  }, React.createElement(Button, {
    onClick: function onClick() {
      if (control.config.onClick) {
        control.config.onClick();
      }
    }
  }, control.name));
}

function _templateObject3$1() {
  var data = _taggedTemplateLiteralLoose(["\n  position: absolute;\n  top: 24px;\n  right: 0px;\n  z-index: 100;\n"]);

  _templateObject3$1 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$2() {
  var data = _taggedTemplateLiteralLoose(["\n  width: 32px;\n  height: 16px;\n  border: 2px solid white;\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n"]);

  _templateObject2$2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$3() {
  var data = _taggedTemplateLiteralLoose(["\n  position: relative;\n"]);

  _templateObject$3 = function _templateObject() {
    return data;
  };

  return data;
}
var ColorPicker =
/*#__PURE__*/
styled.div(
/*#__PURE__*/
_templateObject$3());
var ColorBox =
/*#__PURE__*/
styled.div(
/*#__PURE__*/
_templateObject2$2());
var Picker =
/*#__PURE__*/
styled.div(
/*#__PURE__*/
_templateObject3$1());
function ColorControl(_ref) {
  var control = _ref.control,
      value = _ref.value;

  var _useState = useState(false),
      open = _useState[0],
      setOpen = _useState[1];

  var pickerRef = useRef();

  var handleClick = function handleClick(e) {
    if (pickerRef.current && !pickerRef.current.contains(e.target)) {
      setOpen(false);
    }
  };

  useEffect(function () {
    document.body.addEventListener('click', handleClick);
    return function () {
      document.body.removeEventListener('click', handleClick);
    };
  }, []);
  return React.createElement(BaseControl, {
    label: control.name,
    flexLabel: true
  }, React.createElement(ColorPicker, null, React.createElement(ColorBox, {
    style: {
      backgroundColor: value
    },
    onClick: function onClick() {
      return setOpen(function (lastValue) {
        return !lastValue;
      });
    }
  }), React.createElement(Picker, {
    hidden: open !== true,
    ref: pickerRef
  }, React.createElement(ChromePicker, {
    color: value,
    onChange: function onChange(color) {
      return control.set(color.hex);
    },
    disableAlpha: true
  }))));
}

var defaultConfig = {
  type: 'number',
  value: 0
};
var defaultValue = function defaultValue(config) {
  if (typeof config.value !== 'undefined') {
    return config.value;
  }

  switch (config.type) {
    case 'number':
      return 0;

    case 'color':
      return '#ff0000';

    case 'string':
      return '';

    case 'select':
      return (config.items || [''])[0];

    case 'boolean':
      return false;

    case 'xypad':
      return {
        x: 0,
        y: 0
      };
  }

  return 0;
};
var clamp = function clamp(num, _clamp, higher) {
  return higher ? Math.min(Math.max(num, _clamp), higher) : Math.min(num, _clamp);
};
var map = function map(value, x1, y1, x2, y2) {
  return (value - x1) * (y2 - x2) / (y1 - x1) + x2;
};

function _templateObject$4() {
  var data = _taggedTemplateLiteralLoose(["\n  -webkit-appearance: none;\n  width: 100%;\n  background: transparent;\n  display: inline-block;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 12px;\n    cursor: pointer;\n    background: rgba(0, 0, 0, 0.045);\n    border-radius: 10px;\n  }\n\n  &::-webkit-slider-thumb {\n    border: none;\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    background: #ffffff;\n    cursor: pointer;\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.22);\n    -webkit-appearance: none;\n    margin-top: -4px;\n  }\n\n  &:focus::-webkit-slider-runnable-track {\n    outline: none;\n  }\n"]);

  _templateObject$4 = function _templateObject() {
    return data;
  };

  return data;
}
var InputRange =
/*#__PURE__*/
styled.input(
/*#__PURE__*/
_templateObject$4());
var PRECISION = 300;
var CENTER = PRECISION / 2;
function NumberControl(_ref) {
  var control = _ref.control,
      value = _ref.value;
  var ref = useRef(null);
  var stage = useRef(null);
  var config = control.config;
  var _config$min = config.min,
      min = _config$min === void 0 ? config.scrub ? -Infinity : 0 : _config$min,
      _config$max = config.max,
      max = _config$max === void 0 ? config.scrub ? Infinity : Math.PI : _config$max;
  var distance = config.distance;

  if (!distance) {
    distance = config.scrub ? 2 : max - min;
  }

  var _useState = useState(config.scrub ? CENTER : map(value, min, max, 0, PRECISION)),
      val = _useState[0],
      setVal = _useState[1];

  var handleChange = useCallback(function () {
    if (config.scrub) {
      setVal(CENTER);
      stage.current = null;
    }
  }, [config.scrub]);
  useEffect(function () {
    var el = ref.current;

    if (el) {
      el.addEventListener('change', handleChange);
    }

    return function () {
      if (el) {
        el.removeEventListener('change', handleChange);
      }
    };
  }, [handleChange, ref]);
  return React.createElement(BaseControl, {
    label: control.name,
    value: value.toFixed(2)
  }, React.createElement(InputRange, {
    ref: ref,
    type: "range",
    value: val,
    min: 0,
    max: PRECISION,
    onChange: function onChange(e) {
      var num = Number(e.currentTarget.value);
      setVal(num);

      if (stage.current === null) {
        stage.current = value;
      }

      var cvalue = (config.scrub ? stage.current : 0) + map(num - (config.scrub ? CENTER : 0), 0, PRECISION, config.scrub ? 0 : min, config.scrub ? distance * 2 : max);
      control.set(clamp(cvalue, min, max));
    }
  }));
}

function _templateObject$5() {
  var data = _taggedTemplateLiteralLoose(["\n  display: block;\n\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n\n  display: block;\n  position: relative;\n\n  width: 100%;\n  height: 32px;\n\n  color: #000;\n\n  margin-left: 8px;\n\n  border: 0;\n  background-color: rgba(0, 0, 0, 0.025);\n  border-radius: 4px;\n  padding: 0 4px;\n"]);

  _templateObject$5 = function _templateObject() {
    return data;
  };

  return data;
}
var Select =
/*#__PURE__*/
styled.select(
/*#__PURE__*/
_templateObject$5());
function SelectControl(_ref) {
  var control = _ref.control,
      value = _ref.value;
  return React.createElement(BaseControl, {
    label: control.name
  }, React.createElement(Select, {
    value: value,
    onChange: function onChange(e) {
      return control.set(e.currentTarget.value);
    }
  }, control.config.items.map(function (item, i) {
    return React.createElement("option", {
      key: i
    }, item);
  })));
}

function _templateObject$6() {
  var data = _taggedTemplateLiteralLoose(["\n  display: block;\n\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n\n  display: block;\n  position: relative;\n\n  width: 100%;\n  height: 32px;\n\n  color: #000;\n\n  margin-left: 8px;\n\n  border: 0;\n  background-color: rgba(0, 0, 0, 0.025);\n  border-radius: 4px;\n  padding: 0 4px;\n"]);

  _templateObject$6 = function _templateObject() {
    return data;
  };

  return data;
}
var Input =
/*#__PURE__*/
styled.input(
/*#__PURE__*/
_templateObject$6());
var StringControl =
/*#__PURE__*/
React.memo(function (_ref) {
  var control = _ref.control,
      value = _ref.value;
  return React.createElement(BaseControl, {
    label: control.name
  }, React.createElement(Input, {
    value: value,
    onChange: function onChange(e) {
      return control.set(e.target.value);
    }
  }));
});

var THRESHOLD = 0.00001;
var XYPadControl =
/*#__PURE__*/
React.memo(function (_ref) {
  var control = _ref.control,
      value = _ref.value;
  var ref = React.useRef();
  var stage = React.useRef(null);
  var _control$config = control.config,
      _control$config$dista = _control$config.distance,
      distance = _control$config$dista === void 0 ? 1 : _control$config$dista,
      _control$config$scrub = _control$config.scrub,
      scrub = _control$config$scrub === void 0 ? false : _control$config$scrub;

  var _React$useState = React.useState({
    width: 270,
    height: 152
  }),
      _React$useState$ = _React$useState[0],
      width = _React$useState$.width,
      height = _React$useState$.height;

  var _useSpring = useSpring(function () {
    return {
      from: {
        x: value.x,
        y: value.y
      },
      onFrame: function onFrame(_ref2) {
        var x = _ref2.x,
            y = _ref2.y;

        if (!scrub) {
          var vx = clamp(map(x, 0, width / 2, 0, distance), -distance, distance) || 0;
          var vy = clamp(map(y, 0, height / 2, 0, distance), -distance, distance) || 0;
          control.set(function () {
            return {
              x: vx < THRESHOLD && vx > -THRESHOLD ? 0 : vx,
              y: vy < THRESHOLD && vy > -THRESHOLD ? 0 : vy
            };
          });
        }
      }
    };
  }),
      cursor = _useSpring[0],
      setCursor = _useSpring[1];

  var bind = useDrag(function (_ref3) {
    var down = _ref3.down,
        movement = _ref3.movement;

    if (down && !stage.current) {
      stage.current = value;
    } else if (!down) {
      stage.current = null;
    }

    setCursor({
      x: down ? movement[0] : 0,
      y: down ? movement[1] : 0
    });

    if (scrub && down) {
      control.set(function () {
        return {
          x: stage.current.x + map(movement[0], 0, width / 2, 0, distance),
          y: stage.current.y + map(movement[1], 0, height / 2, 0, distance)
        };
      });
    }
  });
  var x = cursor.x.interpolate(function (n) {
    return clamp(n + width / 2, 0, width);
  });
  var y = cursor.y.interpolate(function (n) {
    return clamp(n + height / 2, 0, height);
  });
  return React.createElement(BaseControl, {
    stack: true,
    label: control.name,
    value: "x: " + value.x.toFixed(1) + ", y: " + value.y.toFixed(1)
  }, React.createElement(animated.svg, Object.assign({
    ref: ref,
    style: {
      userSelect: 'none',
      borderRadius: 8,
      border: '1px solid #f0f0f0'
    },
    width: width,
    height: height,
    xmlns: "http://www.w3.org/2000/svg"
  }, bind()), React.createElement("rect", {
    fill: "rgb(250, 250, 250)",
    width: "100%",
    height: "100%"
  }), React.createElement(animated.line, {
    x1: x,
    x2: x,
    y1: 0,
    y2: "100%",
    stroke: "#ccc"
  }), React.createElement(animated.line, {
    x1: 0,
    x2: "100%",
    y1: y,
    y2: y,
    stroke: "#ccc"
  }), React.createElement(animated.g, {
    style: {
      transform: interpolate([x, y], function (x, y) {
        return "translate(" + x + "px, " + y + "px)";
      })
    }
  }, React.createElement("circle", {
    r: 8,
    fill: "#ccc"
  }), React.createElement("circle", {
    r: 4,
    fill: "#aaa"
  }))));
}); // (XYPadControl as any).skipEvents = true;

var ControlType = {
  number: NumberControl,
  "boolean": BooleanControl,
  select: SelectControl,
  color: ColorControl,
  string: StringControl,
  button: ButtonControl,
  xypad: XYPadControl
};
function ControlItem(_ref) {
  var control = _ref.control;
  var Control = control.config.component || ControlType[control.config.type];

  var _useState = useState(defaultValue(control.config)),
      value = _useState[0],
      setValue = _useState[1];

  useEffect(function () {
    control.addEventListener(setValue);
  }, []);
  if (!Control) return null;
  return React.createElement(Control, {
    key: control.id.current,
    control: control,
    value: value
  });
}

function _templateObject2$3() {
  var data = _taggedTemplateLiteralLoose(["\n  background: ", ";\n  padding: 16px;\n  display: ", ";\n  margin-bottom: 8px;\n"]);

  _templateObject2$3 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$7() {
  var data = _taggedTemplateLiteralLoose(["\n  display: block;\n  font-family: sans-serif;\n  font-size: 13px;\n  font-weight: bold;\n  padding-left: 16px;\n  cursor: pointer;\n  position: relative;\n  user-select: none;\n\n  &:before,\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: 8px;\n    right: 16px;\n    width: 12px;\n    height: 2px;\n    background-color: #333;\n    /* transition: transform 0.25s ease-out; */\n  }\n  &:before {\n    transform: rotate(", "deg);\n  }\n\n  &:after{\n    transform: rotate(", "deg);\n  }\n"]);

  _templateObject$7 = function _templateObject() {
    return data;
  };

  return data;
}
var Heading =
/*#__PURE__*/
styled.h2(
/*#__PURE__*/
_templateObject$7(), function (props) {
  return props.open ? 0 : 90;
}, function (props) {
  return props.open ? 0 : 180;
});
var Container =
/*#__PURE__*/
styled.div(
/*#__PURE__*/
_templateObject2$3(), function (props) {
  return props.bg ? '#f9f9f9' : '#fff';
}, function (props) {
  return props.open ? 'block' : 'none';
});
var ControlGroup = function ControlGroup(_ref) {
  var title = _ref.title,
      controls = _ref.controls;

  var _useState = useState(true),
      open = _useState[0],
      setOpen = _useState[1];

  var isDefault = title !== 'DEFAULT_GROUP';
  return React.createElement("div", null, isDefault && React.createElement(Heading, {
    open: open,
    onClick: function onClick() {
      return setOpen(function (o) {
        return !o;
      });
    }
  }, title), React.createElement(Container, {
    open: open,
    bg: isDefault
  }, Array.from(controls).map(function (_ref2) {
    var id = _ref2[0],
        control = _ref2[1];
    return React.createElement(ControlItem, {
      key: id.current,
      control: control
    });
  })));
};

function _templateObject3$2() {
  var data = _taggedTemplateLiteralLoose(["\n  padding-bottom: 8px;\n"]);

  _templateObject3$2 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2$4() {
  var data = _taggedTemplateLiteralLoose(["\n  display: flex;\n  align-items: center;\n  padding-left: 16px;\n  padding-right: 16px;\n  height: 42px;\n  font-family: sans-serif;\n  font-size: 14px;\n  color: #fff;\n  cursor: move;\n  cursor: grab;\n  user-select: none;\n  background-color: #000;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  box-shadow: 0 0 14px 0 rgba(0, 0, 0, 0.14);\n"]);

  _templateObject2$4 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject$8() {
  var data = _taggedTemplateLiteralLoose(["\n  display: block;\n  position: fixed;\n  top: 16px;\n  right: 16px;\n  width: ", "px;\n  border-radius: 16px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.12);\n"]);

  _templateObject$8 = function _templateObject() {
    return data;
  };

  return data;
}
var WIDTH = 300;
var Float =
/*#__PURE__*/
styled(animated.div)(
/*#__PURE__*/
_templateObject$8(), WIDTH);
var Header =
/*#__PURE__*/
styled(animated.div)(
/*#__PURE__*/
_templateObject2$4());
var Items =
/*#__PURE__*/
styled.div(
/*#__PURE__*/
_templateObject3$2());
var DEFAULT_GROUP = 'DEFAULT_GROUP';

var groupByGroup = function groupByGroup(items) {
  return Array.from(items).reduce(function (acc, item) {
    var groupName = item[1].config.group || DEFAULT_GROUP;
    acc[groupName] = acc[groupName] || [];
    acc[groupName].push(item);
    return acc;
  }, {});
};

var Controls =
/*#__PURE__*/
React.memo(function () {
  var _useSpring = useSpring(function () {
    return {
      pos: [0, 0]
    };
  }),
      pos = _useSpring[0].pos,
      setPos = _useSpring[1];

  var bind = useDrag(function (_ref) {
    var movement = _ref.movement,
        _ref$memo = _ref.memo,
        memo = _ref$memo === void 0 ? pos.getValue ? pos.getValue() : pos.get() : _ref$memo;
    setPos({
      pos: [clamp(movement[0] + memo[0], -window.innerWidth + WIDTH + 32, 1), clamp(movement[1] + memo[1], 0, window.innerHeight - 350)]
    });
    return memo;
  });

  var _useState = useState(0),
      set = _useState[1];

  useEffect(function () {
    controlsEmitter.update = function () {
      set(function (n) {
        return n + 1;
      });
      return null;
    };
  }, []);
  return React.createElement(Float, {
    style: {
      transform: interpolate([pos], function (_ref2) {
        var x = _ref2[0],
            y = _ref2[1];
        return "translate3d(" + x + "px," + y + "px,0)";
      })
    }
  }, React.createElement(Header, Object.assign({}, bind())), React.createElement(Items, null, Object.entries(groupByGroup(controls)).map(function (_ref3) {
    var groupName = _ref3[0],
        items = _ref3[1];
    return React.createElement(ControlGroup, {
      key: groupName,
      title: groupName,
      controls: items
    });
  })));
});

var uid = 0;
var useControl = function useControl(name, config) {
  if (config === void 0) {
    config = defaultConfig;
  }

  var id = useRef(uid++);
  var listener = useRef();

  var _useState = useState(defaultValue(config)),
      value = _useState[0],
      set = _useState[1];

  var _useSpring = useSpring$1(function () {
    return {
      value: value,
      config: typeof config.spring === 'object' ? config.spring : undefined
    };
  }),
      spring = _useSpring[0],
      setSpring = _useSpring[1];

  if (config.state) {
    value = config.state[0];
    set = config.state[1];
  }

  useEffect(function () {
    var control = {
      id: id,
      name: name,
      set: set,
      value: value,
      config: config,
      addEventListener: function addEventListener(fn) {
        listener.current = fn;
      }
    };
    controls.set(id, control);
    controlsEmitter.update();
    return function () {
      controls["delete"](id);
      controlsEmitter.update();
    };
  }, []);
  useEffect(function () {
    config.spring && void setSpring({
      value: value
    });
    listener.current && void listener.current(value);
    config.onChange && void config.onChange(value);
  }, [value]);

  if (config.spring) {
    return spring.value;
  }

  return value;
};

var controlsEmitter = {
  update: function update() {
    return null;
  }
};
var controls =
/*#__PURE__*/
new Map();

export { Controls, controls, controlsEmitter, useControl };
//# sourceMappingURL=react-three-gui.esm.js.map
