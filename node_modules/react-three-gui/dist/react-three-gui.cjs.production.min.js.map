{"version":3,"file":"react-three-gui.cjs.production.min.js","sources":["../src/controls/BaseControl.tsx","../src/controls/BooleanControl.tsx","../src/controls/ButtonControl.tsx","../src/controls/ColorControl.tsx","../src/utils/index.ts","../src/controls/NumberControl.tsx","../src/controls/SelectControl.tsx","../src/controls/StringControl.tsx","../src/components/ControlItem.tsx","../src/controls/XYPadControl.tsx","../src/components/ControlGroup.tsx","../src/Controls.tsx","../src/hooks/useControl.ts","../src/index.ts"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\ntype SCProps = {\n  stack?: boolean;\n  flexLabel?: boolean;\n};\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 8px 0;\n`;\n\nconst Label = styled.label<SCProps>`\n  display: flex;\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n  width: 56px;\n  user-select: none;\n  ${props => (props.flexLabel === true ? 'flex: 1;' : '')}\n`;\n\nconst Content = styled.div<SCProps>`\n  display: flex;\n  ${props => (props.flexLabel !== true ? 'flex: 1;' : '')}\n  justify-content: flex-end;\n  padding: 0 8px;\n`;\n\nconst Value = styled.div<SCProps>`\n  display: flex;\n  font-family: sans-serif;\n  white-space: nowrap;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.75);\n  justify-content: flex-end;\n  ${props => (props.stack ? 'flex: 1;' : '')}\n  ${props => (props.stack ? '' : 'width: 42px;')}\n`;\n\ntype BaseControlProps = {\n  label?: string;\n  flexLabel?: boolean;\n  value?: string;\n  children?: any;\n  stack?: boolean;\n  htmlFor?: any;\n};\n\nexport function BaseControl({\n  htmlFor,\n  label,\n  flexLabel,\n  value,\n  stack,\n  children,\n}: BaseControlProps) {\n  if (stack) {\n    return (\n      <div>\n        <Row>\n          <Label flexLabel={flexLabel}>{label}</Label>\n          <Value stack flexLabel={flexLabel}>\n            {value}\n          </Value>\n        </Row>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <Row>\n      <Label flexLabel={flexLabel} htmlFor={htmlFor}>\n        {label}\n      </Label>\n      <Content flexLabel={flexLabel}>{children}</Content>\n      {typeof value !== 'undefined' && <Value>{value}</Value>}\n    </Row>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BaseControl } from './BaseControl';\n\nconst FakeCheckbox = styled.label`\n  height: 16px;\n  width: 16px;\n  border: 2px solid rgba(0, 0, 0, 0.065);\n  border-radius: 4px;\n  position: relative;\n  margin-top: -1px;\n  transition: ease-in-out 125ms;\n  transition-property: background-color, border-color;\n`;\n\nconst Checkbox = styled.input`\n  opacity: 0;\n  margin-right: -15px;\n  & + ${FakeCheckbox}:after {\n    position: absolute;\n    content: '';\n    display: inline-block;\n    height: 4px;\n    width: 8px;\n    border-left: 2px solid;\n    border-bottom: 2px solid;\n    left: 3px;\n    top: 4px;\n    opacity: 0;\n    transform: translate(0px, 2px) rotate(-45deg);\n    transition: ease-in-out 125ms;\n    transition-property: opacity, transform;\n  }\n  &:checked + ${FakeCheckbox}:after {\n    opacity: 1;\n    transform: translate(0px, 0px) rotate(-45deg);\n  }\n  &:checked + ${FakeCheckbox} {\n    background: rgba(0, 0, 0, 0.045);\n    border-color: rgba(0, 0, 0, 0.085);\n  }\n`;\n\nexport function BooleanControl({ control, value }: any) {\n  const htmlFor = `Control${control.id.current}`;\n  return (\n    <BaseControl flexLabel label={control.name} htmlFor={htmlFor}>\n      <Checkbox\n        id={htmlFor}\n        type=\"checkbox\"\n        checked={value}\n        onChange={e => control.set(e.currentTarget.checked)}\n      />\n      <FakeCheckbox htmlFor={htmlFor} />\n    </BaseControl>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  display: block;\n\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n\n  display: block;\n  position: relative;\n\n  width: 100%;\n  height: 32px;\n\n  color: #000;\n\n  border: 0;\n  background-color: rgba(0, 0, 0, 0.045);\n  border-radius: 4px;\n  padding: 0 4px;\n`;\n\nexport function ButtonControl({ control }: any) {\n  return (\n    <div style={{ paddingTop: 8, paddingBottom: 8 }}>\n      <Button\n        onClick={() => {\n          if (control.config.onClick) {\n            control.config.onClick();\n          }\n        }}\n      >\n        {control.name}\n      </Button>\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport styled from 'styled-components';\nimport { BaseControl } from './BaseControl';\n\nconst ColorPicker = styled.div`\n  position: relative;\n`;\n\nconst ColorBox = styled.div`\n  width: 32px;\n  height: 16px;\n  border: 2px solid white;\n  box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.3);\n  cursor: pointer;\n`;\n\nconst Picker = styled.div<{ hidden: boolean }>`\n  position: absolute;\n  top: 24px;\n  right: 0px;\n  z-index: 100;\n`;\n\nexport function ColorControl({ control, value }: any) {\n  const [open, setOpen] = useState(false);\n  const pickerRef = useRef<HTMLDivElement>();\n  const handleClick = (e: any) => {\n    if (pickerRef.current && !pickerRef.current.contains(e.target)) {\n      setOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener('click', handleClick);\n    return () => {\n      document.body.removeEventListener('click', handleClick);\n    };\n  }, []);\n\n  return (\n    <BaseControl label={control.name} flexLabel>\n      <ColorPicker>\n        <ColorBox\n          style={{ backgroundColor: value }}\n          onClick={() => setOpen(lastValue => !lastValue)}\n        />\n        <Picker hidden={open !== true} ref={pickerRef as any}>\n          <ChromePicker\n            color={value}\n            onChange={color => control.set(color.hex)}\n            disableAlpha\n          />\n        </Picker>\n      </ColorPicker>\n    </BaseControl>\n  );\n}\n","import { ControlConfig } from '../types';\n\nexport const defaultConfig = {\n  type: 'number' as 'number',\n  value: 0,\n};\n\nexport const defaultValue = (config: ControlConfig) => {\n  if (typeof config.value !== 'undefined') {\n    return config.value;\n  }\n  switch (config.type) {\n    case 'number':\n      return 0;\n    case 'color':\n      return '#ff0000';\n    case 'string':\n      return '';\n    case 'select':\n      return (config.items || [''])[0];\n    case 'boolean':\n      return false;\n    case 'xypad':\n      return { x: 0, y: 0 };\n  }\n  return 0;\n};\n\nexport const clamp = (num: number, clamp: number, higher: number) =>\n  higher ? Math.min(Math.max(num, clamp), higher) : Math.min(num, clamp);\n\nexport const map = (\n  value: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n) => ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { clamp, map } from '../utils';\nimport { BaseControl } from './BaseControl';\n\nconst InputRange = styled.input`\n  -webkit-appearance: none;\n  width: 100%;\n  background: transparent;\n  display: inline-block;\n\n  &:focus {\n    outline: none;\n  }\n\n  &::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 12px;\n    cursor: pointer;\n    background: rgba(0, 0, 0, 0.045);\n    border-radius: 10px;\n  }\n\n  &::-webkit-slider-thumb {\n    border: none;\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    background: #ffffff;\n    cursor: pointer;\n    box-shadow: 0 2px 8px 0 rgba(0, 0, 0, 0.22);\n    -webkit-appearance: none;\n    margin-top: -4px;\n  }\n\n  &:focus::-webkit-slider-runnable-track {\n    outline: none;\n  }\n`;\n\nconst PRECISION = 300;\nconst CENTER = PRECISION / 2;\n\nexport function NumberControl({ control, value }: any) {\n  const ref = useRef<HTMLInputElement | null>(null);\n  const stage = useRef(null);\n  const { config } = control;\n  const {\n    min = config.scrub ? -Infinity : 0,\n    max = config.scrub ? Infinity : Math.PI\n  } = config;\n\n  let distance = config.distance;\n  if (!distance) {\n    distance = config.scrub ? 2 : max - min;\n  }\n  const [val, setVal] = useState(config.scrub ? CENTER : map(value, min, max, 0, PRECISION));\n\n  const handleChange = useCallback(() => {\n    if (config.scrub) {\n      setVal(CENTER);\n      stage.current = null;\n    }\n  }, [config.scrub]);\n\n  useEffect(() => {\n    const el = ref.current;\n    if (el) {\n      el.addEventListener('change', handleChange);\n    }\n    return () => {\n      if (el) {\n        el.removeEventListener('change', handleChange);\n      }\n    };\n  }, [handleChange, ref]);\n\n  return (\n    <BaseControl label={control.name} value={value.toFixed(2)}>\n      <InputRange\n        ref={ref}\n        type=\"range\"\n        value={val}\n        min={0}\n        max={PRECISION}\n        onChange={e => {\n          const num = Number(e.currentTarget.value);\n          setVal(num);\n          if (stage.current === null) {\n            stage.current = value;\n          }\n          const cvalue =\n            (config.scrub ? (stage as any).current : 0) +\n            map(\n              num - (config.scrub ? CENTER : 0),\n              0,\n              PRECISION,\n              config.scrub ? 0 : min,\n              config.scrub ? distance * 2 : max\n            );\n          control.set(clamp(cvalue, min, max));\n        }}\n      />\n    </BaseControl>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BaseControl } from './BaseControl';\n\nconst Select = styled.select`\n  display: block;\n\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n\n  display: block;\n  position: relative;\n\n  width: 100%;\n  height: 32px;\n\n  color: #000;\n\n  margin-left: 8px;\n\n  border: 0;\n  background-color: rgba(0, 0, 0, 0.025);\n  border-radius: 4px;\n  padding: 0 4px;\n`;\n\nexport function SelectControl({ control, value }: any) {\n  return (\n    <BaseControl label={control.name}>\n      <Select value={value} onChange={e => control.set(e.currentTarget.value)}>\n        {control.config.items.map((item: string, i: number) => (\n          <option key={i}>{item}</option>\n        ))}\n      </Select>\n    </BaseControl>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BaseControl } from './BaseControl';\n\nconst Input = styled.input`\n  display: block;\n\n  font-family: sans-serif;\n  font-size: 14px;\n  color: rgba(0, 0, 0, 0.4);\n\n  display: block;\n  position: relative;\n\n  width: 100%;\n  height: 32px;\n\n  color: #000;\n\n  margin-left: 8px;\n\n  border: 0;\n  background-color: rgba(0, 0, 0, 0.025);\n  border-radius: 4px;\n  padding: 0 4px;\n`;\n\nexport const StringControl = React.memo(({ control, value }: any) => {\n  return (\n    <BaseControl label={control.name}>\n      <Input value={value} onChange={e => control.set(e.target.value)} />\n    </BaseControl>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport { BooleanControl } from '../controls/BooleanControl';\nimport { ButtonControl } from '../controls/ButtonControl';\nimport { ColorControl } from '../controls/ColorControl';\nimport { NumberControl } from '../controls/NumberControl';\nimport { SelectControl } from '../controls/SelectControl';\nimport { StringControl } from '../controls/StringControl';\nimport { XYPadControl } from '../controls/XYPadControl';\nimport { defaultValue } from '../utils';\n\nconst ControlType = {\n  number: NumberControl,\n  boolean: BooleanControl,\n  select: SelectControl,\n  color: ColorControl,\n  string: StringControl,\n  button: ButtonControl,\n  xypad: XYPadControl,\n};\n\nexport function ControlItem({ control }: any) {\n  const Control =\n    control.config.component || (ControlType as any)[control.config.type];\n  const [value, setValue] = useState(defaultValue(control.config));\n  useEffect(() => {\n    control.addEventListener(setValue);\n  }, []);\n  if (!Control) return null;\n  return <Control key={control.id.current} control={control} value={value} />;\n}","import React from 'react';\nimport { animated, interpolate, useSpring } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport { clamp, map } from '../utils';\nimport { BaseControl } from './BaseControl';\n\nconst THRESHOLD = 0.00001;\n\nexport const XYPadControl = React.memo(({ control, value }: any) => {\n  const ref = React.useRef<SVGElement>();\n  const stage = React.useRef(null);\n  const { distance = 1, scrub = false } = control.config;\n  const [{ width, height }] = React.useState({ width: 270, height: 152 });\n  const [cursor, setCursor] = useSpring(() => ({\n    from: {\n      x: value.x,\n      y: value.y,\n    },\n    onFrame({ x, y }: any) {\n      if (!scrub) {\n        const vx = clamp(map(x, 0, width / 2, 0, distance), -distance, distance) || 0;\n        const vy = clamp(map(y, 0, height / 2, 0, distance), -distance, distance) || 0\n        control.set(() => ({\n          x: vx < THRESHOLD && vx > -THRESHOLD ? 0 : vx,\n          y: vy < THRESHOLD && vy > -THRESHOLD ? 0 : vy,\n        }));\n      }\n    },\n  }));\n\n  const bind = useDrag(({ down, movement }) => {\n    if (down && !stage.current) {\n      stage.current = value;\n    } else if (!down) {\n      stage.current = null;\n    }\n    setCursor({ x: down ? movement[0] : 0, y: down ? movement[1] : 0 });\n    if (scrub && down) {\n      control.set(() => ({\n        x:\n          (stage as any).current.x +\n          map(movement[0], 0, width / 2, 0, distance),\n        y:\n          (stage as any).current.y +\n          map(movement[1], 0, height / 2, 0, distance),\n      }));\n    }\n  });\n\n  const x = cursor.x.interpolate((n: number) => clamp(n + width / 2, 0, width));\n  const y = cursor.y.interpolate((n: number) => clamp(n + height / 2, 0, height));\n\n  return (\n    <BaseControl\n      stack\n      label={control.name}\n      value={`x: ${value.x.toFixed(1)}, y: ${value.y.toFixed(1)}`}\n    >\n      <animated.svg\n        ref={ref as any}\n        style={{\n          userSelect: 'none',\n          borderRadius: 8,\n          border: '1px solid #f0f0f0',\n        }}\n        width={width}\n        height={height}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...bind()}\n      >\n        <rect fill=\"rgb(250, 250, 250)\" width=\"100%\" height=\"100%\" />\n        <animated.line x1={x} x2={x} y1={0} y2=\"100%\" stroke=\"#ccc\" />\n        <animated.line x1={0} x2=\"100%\" y1={y} y2={y} stroke=\"#ccc\" />\n        <animated.g\n          style={{\n            transform: interpolate([x, y], (x, y) => `translate(${x}px, ${y}px)`),\n          }}\n        >\n          <circle r={8} fill=\"#ccc\" />\n          <circle r={4} fill=\"#aaa\" />\n        </animated.g>\n      </animated.svg>\n    </BaseControl>\n  );\n});\n\n// (XYPadControl as any).skipEvents = true;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ControlItem } from './ControlItem';\n\nconst Heading = styled.h2<{ open: boolean }>`\n  display: block;\n  font-family: sans-serif;\n  font-size: 13px;\n  font-weight: bold;\n  padding-left: 16px;\n  cursor: pointer;\n  position: relative;\n  user-select: none;\n\n  &:before,\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: 8px;\n    right: 16px;\n    width: 12px;\n    height: 2px;\n    background-color: #333;\n    /* transition: transform 0.25s ease-out; */\n  }\n  &:before {\n    transform: rotate(${props => props.open ? 0 : 90}deg);\n  }\n\n  &:after{\n    transform: rotate(${props => props.open ? 0 : 180}deg);\n  }\n`;\n\nconst Container = styled.div<{ open: boolean, bg: boolean }>`\n  background: ${props => props.bg ? '#f9f9f9' : '#fff'};\n  padding: 16px;\n  display: ${props => props.open ? 'block' : 'none'};\n  margin-bottom: 8px;\n`;\n\nexport const ControlGroup = ({ title, controls }: any) => {\n  const [open, setOpen] = useState(true);\n  const isDefault = title !== 'DEFAULT_GROUP';\n  return (\n    <div>\n      {isDefault && <Heading open={open} onClick={() => setOpen(o => !o)}>{title}</Heading>}\n      <Container open={open} bg={isDefault}>\n        {Array.from(controls).map(([id, control]: any) => (\n          <ControlItem key={id.current} control={control} />\n        ))}\n      </Container>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { animated, interpolate, useSpring } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport styled from 'styled-components';\nimport { ControlGroup } from './components/ControlGroup';\nimport { controls, controlsEmitter } from './index';\nimport { clamp } from './utils';\n\nconst WIDTH = 300;\n\nconst Float = styled(animated.div)`\n  display: block;\n  position: fixed;\n  top: 16px;\n  right: 16px;\n  width: ${WIDTH}px;\n  border-radius: 16px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.12);\n`;\n\nconst Header = styled(animated.div)`\n  display: flex;\n  align-items: center;\n  padding-left: 16px;\n  padding-right: 16px;\n  height: 42px;\n  font-family: sans-serif;\n  font-size: 14px;\n  color: #fff;\n  cursor: move;\n  cursor: grab;\n  user-select: none;\n  background-color: #000;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  box-shadow: 0 0 14px 0 rgba(0, 0, 0, 0.14);\n`;\n\nconst Items = styled.div`\n  padding-bottom: 8px;\n`;\n\nconst DEFAULT_GROUP = 'DEFAULT_GROUP';\n\nconst groupByGroup = (items: any): any => {\n  return Array.from(items).reduce((acc: any, item: any) => {\n    const groupName = item[1].config.group || DEFAULT_GROUP;\n    acc[groupName] = acc[groupName] || [];\n    acc[groupName].push(item);\n    return acc;\n  }, {} as { [key: string]: any });\n}\n\nexport const Controls = React.memo(() => {\n  const [{ pos }, setPos] = useSpring(() => ({ pos: [0, 0] }));\n  const bind = useDrag(({ movement, memo = ((pos as any).getValue ? (pos as any).getValue() : (pos as any).get()) }) => {\n    setPos({\n      pos: [\n        clamp(movement[0] + memo[0], -window.innerWidth + WIDTH + 32, 1),\n        clamp(movement[1] + memo[1], 0, window.innerHeight - 350),\n      ],\n    });\n    return memo;\n  });\n  const [, set] = useState<number>(0);\n\n  useEffect(() => {\n    controlsEmitter.update = () => {\n      set(n => n + 1);\n      return null;\n    };\n  }, []);\n\n  return (\n    <Float\n      style={{\n        transform: interpolate(\n          [pos],\n          ([x, y]) => `translate3d(${x}px,${y}px,0)`\n        ),\n      }}\n    >\n      <Header {...bind()} />\n      <Items>\n        {Object.entries(groupByGroup(controls)).map(([groupName, items]: any) => (\n          <ControlGroup key={groupName} title={groupName} controls={items} />\n        ))}\n      </Items>\n    </Float>\n  );\n});\n","import { useEffect, useRef, useState } from 'react';\nimport { useSpring } from 'react-spring/three';\nimport { controls, controlsEmitter } from '../index';\nimport { ControlConfig, ControlItem } from '../types';\nimport { defaultConfig, defaultValue } from '../utils';\n\nlet uid = 0;\n\nexport const useControl = (\n  name: string,\n  config: ControlConfig = defaultConfig\n) => {\n  const id = useRef(uid++);\n  const listener = useRef<Function>();\n  let [value, set] = useState(defaultValue(config));\n\n  const [spring, setSpring] = useSpring(() => ({\n    value,\n    config: typeof config.spring === 'object' ? config.spring : undefined,\n  }));\n\n  if (config.state) {\n    value = config.state[0];\n    set = config.state[1];\n  }\n\n  useEffect(() => {\n    const control: ControlItem = {\n      id,\n      name,\n      set,\n      value,\n      config,\n      addEventListener(fn: Function) {\n        listener.current = fn;\n      },\n    };\n    controls.set(id, control);\n    controlsEmitter.update();\n    return () => {\n      controls.delete(id);\n      controlsEmitter.update();\n    };\n  }, []);\n\n  useEffect(() => {\n    config.spring && void setSpring({ value });\n    listener.current && void listener.current(value);\n    config.onChange && void config.onChange(value);\n  }, [value]);\n\n  if (config.spring) {\n    return spring.value;\n  }\n\n  return value;\n};\n","import { ControlId, ControlItem } from './types';\nexport { Controls } from './Controls';\nexport { useControl } from './hooks/useControl';\nexport const controlsEmitter = { update: () => null };\nexport const controls = new Map<ControlId, ControlItem>();\n"],"names":["Row","styled","div","_templateObject","Label","label","_templateObject2","props","flexLabel","Content","_templateObject3","Value","_templateObject4","stack","BaseControl","htmlFor","value","children","React","FakeCheckbox","Checkbox","input","Button","button","ColorPicker","ColorBox","Picker","defaultConfig","type","defaultValue","config","items","x","y","clamp","num","higher","Math","min","max","map","x1","y1","x2","y2","InputRange","Select","select","Input","ControlType","number","control","ref","useRef","stage","scrub","Infinity","PI","distance","useState","PRECISION","val","setVal","handleChange","useCallback","current","useEffect","el","addEventListener","removeEventListener","name","toFixed","onChange","e","Number","currentTarget","cvalue","set","id","checked","item","i","key","color","open","setOpen","pickerRef","handleClick","contains","target","document","body","style","backgroundColor","onClick","lastValue","hidden","ChromePicker","hex","disableAlpha","string","memo","paddingTop","paddingBottom","xypad","width","height","useSpring","from","onFrame","vx","vy","cursor","setCursor","bind","useDrag","down","movement","interpolate","n","animated","svg","userSelect","borderRadius","border","xmlns","fill","line","stroke","g","transform","r","ControlItem","Control","component","setValue","Heading","h2","Container","bg","ControlGroup","title","controls","isDefault","o","Array","Float","Header","Items","Controls","pos","setPos","getValue","get","window","innerWidth","innerHeight","controlsEmitter","update","Object","entries","reduce","acc","groupName","group","push","uid","Map","listener","spring","undefined","setSpring","state","fn"],"mappings":"6/BAQA,IAAMA,EAAMC,EAAOC,IAAVC,KAOHC,EAAQH,EAAOI,MAAVC,IAOP,SAAAC,UAA8B,IAApBA,EAAMC,UAAqB,WAAa,KAGhDC,EAAUR,EAAOC,IAAVQ,IAET,SAAAH,UAA8B,IAApBA,EAAMC,UAAqB,WAAa,KAKhDG,EAAQV,EAAOC,IAAVU,IAOP,SAAAL,UAAUA,EAAMM,MAAQ,WAAa,IACrC,SAAAN,UAAUA,EAAMM,MAAQ,GAAK,0BAYjBC,SACdC,IAAAA,QACAV,IAAAA,MACAG,IAAAA,UACAQ,IAAAA,MAEAC,IAAAA,kBADAJ,MAKIK,2BACEA,gBAAClB,OACCkB,gBAACd,GAAMI,UAAWA,GAAYH,GAC9Ba,gBAACP,GAAME,SAAML,UAAWA,GACrBQ,IAGJC,GAMLC,gBAAClB,OACCkB,gBAACd,GAAMI,UAAWA,EAAWO,QAASA,GACnCV,GAEHa,gBAACT,GAAQD,UAAWA,GAAYS,QACd,IAAVD,GAAyBE,gBAACP,OAAOK,i9BC5E/C,IAAMG,EAAelB,EAAOI,MAAVF,KAWZiB,EAAWnB,EAAOoB,MAAVf,IAGNa,EAeQA,EAIAA,yWClChB,IAAMG,EAASrB,EAAOsB,OAAVpB,sZCEZ,IAAMqB,EAAcvB,EAAOC,IAAVC,KAIXsB,EAAWxB,EAAOC,IAAVI,KAQRoB,EAASzB,EAAOC,IAAVQ,KCfCiB,EAAgB,CAC3BC,KAAM,SACNZ,MAAO,GAGIa,EAAe,SAACC,WACC,IAAjBA,EAAOd,aACTc,EAAOd,aAERc,EAAOF,UACR,gBACI,MACJ,cACI,cACJ,eACI,OACJ,gBACKE,EAAOC,OAAS,CAAC,KAAK,OAC3B,iBACI,MACJ,cACI,CAAEC,EAAG,EAAGC,EAAG,UAEf,GAGIC,EAAQ,SAACC,EAAaD,EAAeE,UAChDA,EAASC,KAAKC,IAAID,KAAKE,IAAIJ,EAAKD,GAAQE,GAAUC,KAAKC,IAAIH,EAAKD,IAErDM,EAAM,SACjBxB,EACAyB,EACAC,EACAC,EACAC,UACK5B,EAAQyB,IAAOG,EAAKD,IAAQD,EAAKD,GAAME,wsBChC9C,IAAME,EAAa5C,EAAOoB,MAAVlB,kYCDhB,IAAM2C,EAAS7C,EAAO8C,OAAV5C,kYCAZ,IAAM6C,EAAQ/C,EAAOoB,MAAVlB,KCML8C,EAAc,CAClBC,uBHgC8BC,IAAAA,QAASnC,IAAAA,MACjCoC,EAAMC,SAAgC,MACtCC,EAAQD,SAAO,MACbvB,EAAWqB,EAAXrB,SAIJA,EAFFQ,IAAAA,aAAMR,EAAOyB,OAASC,SAAW,MAE/B1B,EADFS,IAAAA,aAAMT,EAAOyB,MAAQC,SAAWnB,KAAKoB,KAGnCC,EAAW5B,EAAO4B,SACjBA,IACHA,EAAW5B,EAAOyB,MAAQ,EAAIhB,EAAMD,SAEhBqB,WAAS7B,EAAOyB,MAfzBK,IAe0CpB,EAAIxB,EAAOsB,EAAKC,EAAK,EAhB5D,MAgBTsB,OAAKC,OAENC,EAAeC,cAAY,WAC3BlC,EAAOyB,QACTO,EAnBSF,KAoBTN,EAAMW,QAAU,OAEjB,CAACnC,EAAOyB,eAEXW,YAAU,eACFC,EAAKf,EAAIa,eACXE,GACFA,EAAGC,iBAAiB,SAAUL,GAEzB,WACDI,GACFA,EAAGE,oBAAoB,SAAUN,KAGpC,CAACA,EAAcX,IAGhBlC,gBAACJ,GAAYT,MAAO8C,EAAQmB,KAAMtD,MAAOA,EAAMuD,QAAQ,IACrDrD,gBAAC2B,GACCO,IAAKA,EACLxB,KAAK,QACLZ,MAAO6C,EACPvB,IAAK,EACLC,IA5CU,IA6CViC,SAAU,SAAAC,OACFtC,EAAMuC,OAAOD,EAAEE,cAAc3D,OACnC8C,EAAO3B,GACe,OAAlBmB,EAAMW,UACRX,EAAMW,QAAUjD,OAEZ4D,GACH9C,EAAOyB,MAASD,EAAcW,QAAU,GACzCzB,EACEL,GAAOL,EAAOyB,MArDbK,IAqD8B,GAC/B,EAvDI,IAyDJ9B,EAAOyB,MAAQ,EAAIjB,EACnBR,EAAOyB,MAAmB,EAAXG,EAAenB,GAElCY,EAAQ0B,IAAI3C,EAAM0C,EAAQtC,EAAKC,iCJzDRY,IAAAA,QACzBpC,YAAoBoC,EAAQ2B,GAAGb,eAEnC/C,gBAACJ,GAAYN,aAAUH,MAAO8C,EAAQmB,KAAMvD,QAASA,GACnDG,gBAACE,GACC0D,GAAI/D,EACJa,KAAK,WACLmD,UAPkC/D,MAQlCwD,SAAU,SAAAC,UAAKtB,EAAQ0B,IAAIJ,EAAEE,cAAcI,YAE7C7D,gBAACC,GAAaJ,QAASA,MOxC3BgC,uBFc8BI,IAAAA,eAE5BjC,gBAACJ,GAAYT,MAAO8C,EAAQmB,MAC1BpD,gBAAC4B,GAAO9B,QAH2BA,MAGbwD,SAAU,SAAAC,UAAKtB,EAAQ0B,IAAIJ,EAAEE,cAAc3D,SAC9DmC,EAAQrB,OAAOC,MAAMS,IAAI,SAACwC,EAAcC,UACvC/D,0BAAQgE,IAAKD,GAAID,QElBzBG,sBLU6BhC,IAAAA,QAASnC,IAAAA,QACd2C,YAAS,GAA1ByB,OAAMC,OACPC,EAAYjC,WACZkC,EAAc,SAACd,GACfa,EAAUrB,UAAYqB,EAAUrB,QAAQuB,SAASf,EAAEgB,SACrDJ,GAAQ,WAIZnB,YAAU,kBACRwB,SAASC,KAAKvB,iBAAiB,QAASmB,GACjC,WACLG,SAASC,KAAKtB,oBAAoB,QAASkB,KAE5C,IAGDrE,gBAACJ,GAAYT,MAAO8C,EAAQmB,KAAM9D,cAChCU,gBAACM,OACCN,gBAACO,GACCmE,MAAO,CAAEC,gBAAiB7E,GAC1B8E,QAAS,kBAAMT,EAAQ,SAAAU,UAAcA,OAEvC7E,gBAACQ,GAAOsE,QAAiB,IAATZ,EAAehC,IAAKkC,GAClCpE,gBAAC+E,gBACCd,MAAOnE,EACPwD,SAAU,SAAAW,UAAShC,EAAQ0B,IAAIM,EAAMe,MACrCC,sBKpCVC,ODY2BlF,EAAMmF,KAAK,gBAAGlD,IAAAA,eAEvCjC,gBAACJ,GAAYT,MAAO8C,EAAQmB,MAC1BpD,gBAAC8B,GAAMhC,QAHuCA,MAGzBwD,SAAU,SAAAC,UAAKtB,EAAQ0B,IAAIJ,EAAEgB,OAAOzE,aCd7DO,uBNQ8B4B,IAAAA,eAE5BjC,uBAAK0E,MAAO,CAAEU,WAAY,EAAGC,cAAe,IAC1CrF,gBAACI,GACCwE,QAAS,WACH3C,EAAQrB,OAAOgE,SACjB3C,EAAQrB,OAAOgE,YAIlB3C,EAAQmB,QMjBfkC,MCT0BtF,EAAMmF,KAAK,gBAAGlD,IAAAA,QAASnC,IAAAA,MAC3CoC,EAAMlC,EAAMmC,SACZC,EAAQpC,EAAMmC,OAAO,QACaF,EAAQrB,WAAxC4B,SAAAA,aAAW,QAAGH,MAAAA,kBACMrC,EAAMyC,SAAS,CAAE8C,MAAO,IAAKC,OAAQ,SAAxDD,IAAAA,MAAOC,IAAAA,SACYC,YAAU,iBAAO,CAC3CC,KAAM,CACJ5E,EAAGhB,EAAMgB,EACTC,EAAGjB,EAAMiB,GAEX4E,wBAAa5E,IAAAA,MACNsB,EAAO,KACJuD,EAAK5E,EAAMM,IAFXR,EAEkB,EAAGyE,EAAQ,EAAG,EAAG/C,IAAYA,EAAUA,IAAa,EACtEqD,EAAK7E,EAAMM,EAAIP,EAAG,EAAGyE,EAAS,EAAG,EAAGhD,IAAYA,EAAUA,IAAa,EAC7EP,EAAQ0B,IAAI,iBAAO,CACjB7C,EAAG8E,EAjBK,MAiBaA,GAjBb,KAiB+B,EAAIA,EAC3C7E,EAAG8E,EAlBK,MAkBaA,GAlBb,KAkB+B,EAAIA,UAX5CC,OAAQC,OAiBTC,EAAOC,UAAQ,gBAAGC,IAAAA,KAAMC,IAAAA,SACxBD,IAAS9D,EAAMW,QACjBX,EAAMW,QAAUjD,EACNoG,IACV9D,EAAMW,QAAU,MAElBgD,EAAU,CAAEjF,EAAGoF,EAAOC,EAAS,GAAK,EAAGpF,EAAGmF,EAAOC,EAAS,GAAK,IAC3D9D,GAAS6D,GACXjE,EAAQ0B,IAAI,iBAAO,CACjB7C,EACGsB,EAAcW,QAAQjC,EACvBQ,EAAI6E,EAAS,GAAI,EAAGZ,EAAQ,EAAG,EAAG/C,GACpCzB,EACGqB,EAAcW,QAAQhC,EACvBO,EAAI6E,EAAS,GAAI,EAAGX,EAAS,EAAG,EAAGhD,QAKrC1B,EAAIgF,EAAOhF,EAAEsF,YAAY,SAACC,UAAcrF,EAAMqF,EAAId,EAAQ,EAAG,EAAGA,KAChExE,EAAI+E,EAAO/E,EAAEqF,YAAY,SAACC,UAAcrF,EAAMqF,EAAIb,EAAS,EAAG,EAAGA,YAGrExF,gBAACJ,GACCD,SACAR,MAAO8C,EAAQmB,KACftD,YAAaA,EAAMgB,EAAEuC,QAAQ,WAAUvD,EAAMiB,EAAEsC,QAAQ,IAEvDrD,gBAACsG,WAASC,mBACRrE,IAAKA,EACLwC,MAAO,CACL8B,WAAY,OACZC,aAAc,EACdC,OAAQ,qBAEVnB,MAAOA,EACPC,OAAQA,EACRmB,MAAM,8BACFX,KAEJhG,wBAAM4G,KAAK,qBAAqBrB,MAAM,OAAOC,OAAO,SACpDxF,gBAACsG,WAASO,MAAKtF,GAAIT,EAAGW,GAAIX,EAAGU,GAAI,EAAGE,GAAG,OAAOoF,OAAO,SACrD9G,gBAACsG,WAASO,MAAKtF,GAAI,EAAGE,GAAG,OAAOD,GAAIT,EAAGW,GAAIX,EAAG+F,OAAO,SACrD9G,gBAACsG,WAASS,GACRrC,MAAO,CACLsC,UAAWZ,cAAY,CAACtF,EAAGC,GAAI,SAACD,EAAGC,sBAAmBD,SAAQC,YAGhEf,0BAAQiH,EAAG,EAAGL,KAAK,SACnB5G,0BAAQiH,EAAG,EAAGL,KAAK,wBD3DbM,SAAcjF,IAAAA,QACtBkF,EACJlF,EAAQrB,OAAOwG,WAAcrF,EAAoBE,EAAQrB,OAAOF,QACxC+B,WAAS9B,EAAasB,EAAQrB,SAAjDd,OAAOuH,cACdrE,YAAU,WACRf,EAAQiB,iBAAiBmE,IACxB,IACEF,EACEnH,gBAACmH,GAAQnD,IAAK/B,EAAQ2B,GAAGb,QAASd,QAASA,EAASnC,MAAOA,IAD7C,msBEvBvB,IAAMwH,EAAUvI,EAAOwI,GAAVtI,IAsBW,SAAAI,UAASA,EAAM6E,KAAO,EAAI,IAI1B,SAAA7E,UAASA,EAAM6E,KAAO,EAAI,MAI5CsD,EAAYzI,EAAOC,IAAVI,IACC,SAAAC,UAASA,EAAMoI,GAAK,UAAY,QAEnC,SAAApI,UAASA,EAAM6E,KAAO,QAAU,SAIhCwD,EAAe,gBAAGC,IAAAA,MAAOC,IAAAA,WACZnF,YAAS,GAA1ByB,OAAMC,OACP0D,EAAsB,kBAAVF,SAEhB3H,2BACG6H,GAAa7H,gBAACsH,GAAQpD,KAAMA,EAAMU,QAAS,kBAAMT,EAAQ,SAAA2D,UAAMA,MAAKH,GACrE3H,gBAACwH,GAAUtD,KAAMA,EAAMuD,GAAII,GACxBE,MAAMrC,KAAKkC,GAAUtG,IAAI,mBACxBtB,gBAACkH,GAAYlD,SAAQjB,QAASd,iyBCzCxC,IAEM+F,EAAQjJ,EAAOuH,WAAStH,IAAhBD,CAAHE,IAFG,KAcRgJ,EAASlJ,EAAOuH,WAAStH,IAAhBD,CAAHK,KAkBN8I,EAAQnJ,EAAOC,IAAVQ,KAeE2I,EAAWnI,EAAMmF,KAAK,eATbtE,IAUM4E,YAAU,iBAAO,CAAE2C,IAAK,CAAC,EAAG,MAA7CA,OAAAA,IAAOC,OACVrC,EAAOC,UAAQ,gBAAGE,IAAAA,aAAUhB,KAAAA,aAASiD,EAAYE,SAAYF,EAAYE,WAAcF,EAAYG,eACvGF,EAAO,CACLD,IAAK,CACHpH,EAAMmF,EAAS,GAAKhB,EAAK,GApDnB,IAoDwBqD,OAAOC,WAAqB,GAAI,GAC9DzH,EAAMmF,EAAS,GAAKhB,EAAK,GAAI,EAAGqD,OAAOE,YAAc,QAGlDvD,IAEAxB,EAAOlB,WAAiB,aAEjCO,YAAU,WACR2F,GAAgBC,OAAS,kBACvBjF,EAAI,SAAA0C,UAAKA,EAAI,IACN,OAER,IAGDrG,gBAACgI,GACCtD,MAAO,CACLsC,UAAWZ,cACT,CAACgC,GACD,6DAIJpI,gBAACiI,mBAAWjC,MACZhG,gBAACkI,OACEW,OAAOC,SAxCMjI,EAwCe+G,GAvC5BG,MAAMrC,KAAK7E,GAAOkI,OAAO,SAACC,EAAUlF,OACnCmF,EAAYnF,EAAK,GAAGlD,OAAOsI,OAJf,uBAKlBF,EAAIC,GAAaD,EAAIC,IAAc,GACnCD,EAAIC,GAAWE,KAAKrF,GACbkF,GACN,MAkC2C1H,IAAI,gBAAE2H,cAC5CjJ,gBAAC0H,GAAa1D,IAAKiF,EAAWtB,MAAOsB,EAAWrB,sBCjFtDwB,GAAM,ECHGT,GAAkB,CAAEC,OAAQ,kBAAM,OAClChB,GAAW,IAAIyB,yFDIF,SACxBjG,EACAxC,YAAAA,IAAAA,EAAwBH,OAElBmD,EAAKzB,SAAOiH,MACZE,EAAWnH,aACEM,WAAS9B,EAAaC,IAApCd,OAAO6D,SAEgB8B,YAAU,iBAAO,CAC3C3F,MAAAA,EACAc,OAAiC,iBAAlBA,EAAO2I,OAAsB3I,EAAO2I,YAASC,KAFvDD,OAAQE,cAKX7I,EAAO8I,QACT5J,EAAQc,EAAO8I,MAAM,GACrB/F,EAAM/C,EAAO8I,MAAM,IAGrB1G,YAAU,kBAWR4E,GAASjE,IAAIC,EAVgB,CAC3BA,GAAAA,EACAR,KAAAA,EACAO,IAAAA,EACA7D,MAAAA,EACAc,OAAAA,EACAsC,0BAAiByG,GACfL,EAASvG,QAAU4G,KAIvBhB,GAAgBC,SACT,WACLhB,UAAgBhE,GAChB+E,GAAgBC,WAEjB,IAEH5F,YAAU,WACRpC,EAAO2I,QAAeE,EAAU,CAAE3J,MAAAA,IAClCwJ,EAASvG,SAAgBuG,EAASvG,QAAQjD,GAC1Cc,EAAO0C,UAAiB1C,EAAO0C,SAASxD,IACvC,CAACA,IAEAc,EAAO2I,OACFA,EAAOzJ,MAGTA"}